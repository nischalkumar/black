<?xml version="1.0" encoding="UTF-8"?>
<beans xmlns="http://www.springframework.org/schema/beans"
       xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
       xmlns:crypt="http://springcryptoutils.com/schema/crypt"
       xmlns:context="http://www.springframework.org/schema/context"
       xmlns:aop="http://www.springframework.org/schema/aop"
       xsi:schemaLocation="
              http://www.springframework.org/schema/beans
              http://www.springframework.org/schema/beans/spring-beans.xsd
              http://www.springframework.org/schema/context
              http://www.springframework.org/schema/context/spring-context.xsd
              http://springcryptoutils.com/schema/crypt
              http://springcryptoutils.com/schema/crypt.xsd
              http://www.springframework.org/schema/aop
              http://www.springframework.org/schema/aop/spring-aop-3.0.xsd">

<context:annotation-config/>
<context:property-placeholder/>
<context:component-scan base-package="org.wizindia.black" />
    <crypt:b64SymmetricCiphererWithStaticKey
            id="encrypter"
            keyAlgorithm="DESede" cipherAlgorithm="DESede/CBC/PKCS5Padding"
            key="Ds3xEA16I52XJpsUsOc4GrB8l6FiVGK/"
            initializationVector="AQIDBAUGAQI="
            provider="BC"
            mode="ENCRYPT"/>
    <crypt:b64SymmetricCiphererWithStaticKey
            id="decrypter"
            keyAlgorithm="DESede" cipherAlgorithm="DESede/CBC/PKCS5Padding"
            key="Ds3xEA16I52XJpsUsOc4GrB8l6FiVGK/"
            initializationVector="AQIDBAUGAQI="
            provider="BC"
    mode="DECRYPT"/>

    <aop:aspectj-autoproxy />

    <!--jap + pool -->
    <bean id="dataSource" class = "com.mchange.v2.c3p0.ComboPooledDataSource" destroy-method="close">
        <property name="driverClass" value="${jdbc.driverClassName}" />
        <property name="jdbcUrl" value="${jdbc.url}" />
        <property name="user" value="${jdbc.username}" />
        <property name="password" value="${jdbc.password}" />

        <!-- these are C3P0 properties -->
        <property name="acquireIncrement" value="${c3p0.acquireIncrement}" />
        <property name="maxIdleTime" value="${c3p0.maxIdleTime}" />
        <property name="initialPoolSize" value="${c3p0.initialPoolSize}" />
        <property name="minPoolSize" value="${c3p0.minPoolSize}" />
        <property name="maxPoolSize" value="${c3p0.maxPoolSize}" />
        <property name="acquireRetryAttempts" value="${c3p0.acquireRetryAttemps}" />
        <property name="idleConnectionTestPeriod" value="${c3p0.idleConnectionTestPeriod}" />
        <property name="testConnectionOnCheckin" value="${c3p0.testConnectionOnCheckin}" />
    </bean>
    <bean id="sessionFactory" class="org.springframework.orm.hibernate4.LocalSessionFactoryBean">
        <property name="dataSource">
            <ref bean="dataSource"/>
        </property>
        <property name="annotatedClasses">
            <list>
                <value>org.wizindia.black.domain.User</value>
                <value>org.wizindia.black.domain.Roles</value>
                <value>org.wizindia.black.domain.Feed</value>
                <value>org.wizindia.black.domain.Context</value>
            </list>
        </property>
        <property name="hibernateProperties">
            <props>
                <prop key="hibernate.show_sql">${hibernate.show_sql}</prop>
                <prop key="hibernate.format_sql">${hibernate.format_sql}</prop>
                <prop key="hibernate.use_sql_comments">${hibernate.use_sql_comments}</prop>
                <prop key="hibernate.hbm2ddl.auto">${hibernate.hbm2ddl.auto}</prop>
            </props>
        </property>
    </bean>
    <!--validator-->
    <bean id="policyValidator" class="org.wizindia.black.validation.validator.PolicyValidator"></bean>
    <bean id="fileNameValidator" class="org.wizindia.black.validation.validator.FileNameValidator"></bean>
    <bean id="fileSizeValidator" class="org.wizindia.black.validation.validator.FileSizeValidator"></bean>
    <bean id="fileExtensionValidator" class="org.wizindia.black.validation.validator.FileExtensionValidator"></bean>
    <bean id="authContextDownLoadRequiredValidator" class="org.wizindia.black.validation.validator.AuthContextDownLoadRequiredValidator"></bean>
    <bean id="unAuthContextDownLoadRequiredValidator" class="org.wizindia.black.validation.validator.UnAuthContextDownLoadRequiredValidator"></bean>
    <!-- workers -->
    <bean id="userWorker" class="org.wizindia.black.worker.UserWorker"></bean>
    <bean id="feedWorker" class="org.wizindia.black.worker.FeedWorker"></bean>
    <!-- Dao -->
    <bean id="userDao" class="org.wizindia.black.jpa.UserDaoImpl"></bean>
    <bean id="roleDao" class="org.wizindia.black.jpa.RoleDaoMock"></bean>
    <bean id="feedDao" class="org.wizindia.black.jpa.FeedDaoImpl"></bean>
    <bean id="userDaoImpl" class="org.wizindia.black.jpa.UserDaoImpl"></bean>
    <bean id="roleDaoMock" class="org.wizindia.black.jpa.RoleDaoMock"></bean>
    <bean id="fileSystem" class="org.wizindia.black.jpa.LocalFileSystem"></bean>
    <!-- Domains -->
    <bean id="user" class="org.wizindia.black.domain.User"></bean>
    <!-- Service -->
    <bean id="userService" class="org.wizindia.black.service.UserService"></bean>
    <bean id="validationService" class="org.wizindia.black.service.ValidatorService"> </bean>
    <bean id="fileService" class="org.wizindia.black.service.FileService"> </bean>
    <bean id="fileSystemFactory" class="org.wizindia.black.service.FileSystemFactory"></bean>
    <bean id="validatorFactory" class="org.wizindia.black.validation.ValidatorFactory">
        <constructor-arg index="0">
            <map>
                <entry key="PolicyValidator" value-ref="policyValidator"/>
                <entry key="FileNameValidator" value-ref="fileNameValidator"/>
                <entry key="FileExtensionValidator" value-ref="fileExtensionValidator"/>
                <entry key="FileSizeValidator" value-ref="fileSizeValidator"/>
                <entry key="UnAuthContextDownLoadRequiredValidator" value-ref="unAuthContextDownLoadRequiredValidator"/>
                <entry key="AuthContextDownLoadRequiredValidator" value-ref="authContextDownLoadRequiredValidator"/>
            </map>
        </constructor-arg>
    </bean>

    <!-- Encrypted -->
    <bean id="encryptedUser" class="org.wizindia.black.common.response.UserResponse"></bean>
    <!--Utils -->
    <bean id="userUtils" class="org.wizindia.black.utils.UserUtils"></bean>
    <bean id="fileSystemUtils" class="org.wizindia.black.utils.FileSystemUtils"></bean>
    <bean id="feedUtils" class="org.wizindia.black.utils.FeedUtils"></bean>
    <bean id="encyptionUtils" class="org.wizindia.black.utils.EncryptionUtils"></bean>
    <bean id="multipartResolver" class="org.springframework.web.multipart.commons.CommonsMultipartResolver" />
</beans>
